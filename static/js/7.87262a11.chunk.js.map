{"version":3,"sources":["views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","utils/bscscan.ts","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx"],"names":["ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","methods","canMint","call","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","map","translationKey","index","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","checked","e","target","style","flex","NextStepButton","endIcon","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","useState","variationId","setVariationId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","useApproveConfirmTransaction","onRequiresApproval","options","address","response","currentAllowance","onApprove","approve","toJSON","send","from","onConfirm","mintNFT","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","images","md","Number","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetCollectibles","isLoading","nftsInWallet","tokenIds","contract","useERC721","toastError","useToast","length","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","getPancakeProfileAddress","once","error","message","spin","undefined","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","values","team","id","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","title","justifyContent","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","library","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","data","bnbSign","signature","eth","personal","sign","utils","utf8ToHex","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","on","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","makeBatchRequest","fetchCosts","DangerOutline","Button","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","lt","checkApprovalStatus","flexDirection","ProfileAvatar","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","img","AchievementAvatar","badge","alt","AchievementTitle","key","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","ComingSoon","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","p","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usePersistState","usernameVisibilityToggled","setUsernameVisibility","Icon","VisibilityOff","VisibilityOn","replace","href","getBscScanAddressUrl","external","outline","StatBox","icon","PrizeIcon","subtitle","Profile","useFetchAchievements","PageLoader","exact","path","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","getBep20Contract","balanceOf","fetchBalance","useGetBnbBalance","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","fastRefresh","StyledApproveConfirmButtons","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","noop","handlePreApprove","useRef","current","then","result","console","TeamAvatar","card","background","bg","AvatarInactive","NoProfileAvatarIcon","SecondaryCard","defaultProps","textTransform"],"mappings":"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","file":"static/js/7.87262a11.chunk.js","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account, library } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const web3 = useWeb3()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = library?.bnbSign\r\n        ? (await library.bnbSign(account, userName))?.signature\r\n        : // web3.utils.utf8ToHex(\"...\") will not be called here on username if hex like string\r\n          // https://github.com/ChainSafe/web3.js/blob/5d027191c5cb7ffbcd44083528bdab19b4e14744/packages/web3-core-helpers/src/formatters.js#L225\r\n          // Last param is the password, and is null to request a signature in the wallet\r\n          await web3.eth.personal.sign(web3.utils.utf8ToHex(userName), account, null)\r\n\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% GLENTY is required', { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    nftAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          nftAddress: action.nftAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {t('Total cost: 1.5 GLENTY')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <UnlockButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's GLENTY balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { Nft } from 'config/constants/types'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\r\n\r\nconst Mint: React.FC = () => {\r\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\r\n          const currentAllowance = new BigNumber(response)\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.methods\r\n          .approve(bunnyFactoryContract.options.address, allowance.toJSON())\r\n          .send({ from: account })\r\n      },\r\n      onConfirm: () => {\r\n        return bunnyFactoryContract.methods.mintNFT(variationId).send({ from: account })\r\n      },\r\n      onSuccess: () => actions.nextStep(),\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% GLENTY', { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setVariationId(Number(value))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.identifier}\r\n                name=\"mintStarter\"\r\n                value={nft.variationId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={variationId === nft.variationId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% GLENTY is required', { num: MINT_COST })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useERC721 } from 'hooks/useContract'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n  const { t } = useTranslation()\r\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\r\n  const contract = useERC721(selectedNft.nftAddress)\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const handleApprove = () => {\r\n    contract.methods\r\n      .approve(getPancakeProfileAddress(), selectedNft.tokenId)\r\n      .send({ from: account })\r\n      .once('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .once('receipt', () => {\r\n        setIsApproving(false)\r\n        setIsApproved(true)\r\n      })\r\n      .once('error', (error) => {\r\n        toastError(t('Error'), error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!isLoading && nftsInWallet.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              nftsInWallet.map((walletNft) => {\r\n                const [firstTokenId] = tokenIds[walletNft.identifier]\r\n                const address = getAddressByType(walletNft.type)\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.identifier}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {t('Approve')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\r\n          const currentAllowance = new BigNumber(response)\r\n          return currentAllowance.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\r\n      },\r\n      onConfirm: () => {\r\n        return profileContract.methods\r\n          .createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\r\n          .send({ from: account })\r\n      },\r\n      onSuccess: async () => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'))\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% GLENTY', { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = () => {\r\n    claimRefundContract.methods\r\n      .getCakeBack()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Success!'))\r\n        onSuccess()\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        setIsConfirming(false)\r\n        toastError(t('Error'), error?.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 GLENTY it cost to make your bunny.')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your GLENTY')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useToast from './useToast'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const { t } = useTranslation()\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: BIG_ZERO,\r\n    numberCakeToRegister: BIG_ZERO,\r\n    numberCakeToUpdate: BIG_ZERO,\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const profileContract = getProfileContract()\r\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\r\n          profileContract.methods.numberCakeToReactivate().call,\r\n          profileContract.methods.numberCakeToRegister().call,\r\n          profileContract.methods.numberCakeToUpdate().call,\r\n        ])\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\r\n        })\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Could not retrieve GLENTY costs for profile'))\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError, t])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { useProfile } from 'state/hooks'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required GLENTY allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\r\n      const currentAllowance = new BigNumber(response)\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <AvatarWrapper>\r\n        <ProfileAvatar profile={profile} />\r\n      </AvatarWrapper>\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            t('%minimum% GLENTY required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {t('Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {t('Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {t('Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\r\nimport { useAppDispatch } from 'state'\r\nimport { useProfile } from 'state/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = () => {\r\n    pancakeProfileContract.methods\r\n      .pauseProfile()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Paused!'))\r\n\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError(t('Error'), error?.message)\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Cost to reactivate in the future: %cost% GLENTY', { cost: getBalanceNumber(numberCakeToReactivate) })}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCollectibles, useProfile } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { getAddressByType } from 'utils/collectibles'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useERC721, useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [selectedNft, setSelectedNft] = useState({\r\n    tokenId: null,\r\n    nftAddress: null,\r\n  })\r\n  const { t } = useTranslation()\r\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const contract = useERC721(selectedNft.nftAddress)\r\n  const profileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onApprove: () => {\r\n        return contract.methods.approve(getPancakeProfileAddress(), selectedNft.tokenId).send({ from: account })\r\n      },\r\n      onConfirm: () => {\r\n        if (!profile.isActive) {\r\n          return profileContract.methods\r\n            .reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n            .send({ from: account })\r\n        }\r\n\r\n        return profileContract.methods\r\n          .updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\r\n          .send({ from: account })\r\n      },\r\n      onSuccess: async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Updated!'))\r\n\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        nftsInWallet.map((walletNft) => {\r\n          const [firstTokenId] = tokenIds[walletNft.identifier]\r\n          const handleChange = (value: string) => {\r\n            setSelectedNft({\r\n              tokenId: Number(value),\r\n              nftAddress: getAddressByType(walletNft.type),\r\n            })\r\n          }\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.identifier}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === selectedNft.tokenId}\r\n              onChange={handleChange}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && nftsInWallet.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = () => {\r\n    cakeContract.methods\r\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        goToChange()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError(t('Error'), error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{getFullDisplayBalance(cost)} GLENTY</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Approve')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: 'Edit Profile',\r\n  [Views.CHANGE]: 'Change Profile Pic',\r\n  [Views.REMOVE]: 'Remove Profile Pic',\r\n  [Views.APPROVE]: 'Approve GLENTY',\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const { t } = useTranslation()\r\n  const translationKey = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {t('Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\r\n            {t('Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\r\n            {t('You’ve got a gift to claim!')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {t(key, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {t(key, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAchievements } from 'state/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const { t } = useTranslation()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n            {t('No achievements yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n","import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n","import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const { t } = useTranslation()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { account } = useWeb3React()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleCollectPoints = () => {\r\n    pointCenterContract.methods\r\n      .getPoints(achievement.address)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsCollecting(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsCollecting(false)\r\n        onCollectSuccess(achievement)\r\n        toastSuccess(t('Points Collected!'))\r\n      })\r\n      .on('error', (error) => {\r\n        toastError(t('Error'), error?.message)\r\n        setIsCollecting(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {t('Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n","import { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {t('Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {t('Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/hooks'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const { t } = useTranslation()\r\n  const { nftsInWallet } = useGetCollectibles()\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\r\n        {t('Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the Glenty platform.')}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {t('No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from '@pancakeswap/uikit'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <AvatarWrapper>\r\n        <ProfileAvatar profile={profile} />\r\n      </AvatarWrapper>\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n  VisibilityOn,\r\n  VisibilityOff,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useProfile } from 'state/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { getBscScanAddressUrl } from 'utils/bscscan'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const { profile } = useProfile()\r\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, 'username_visibility_toggled')\r\n  const { t } = useTranslation()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  const toggleUsernameVisibility = () => {\r\n    setUsernameVisibility(!usernameVisibilityToggled)\r\n  }\r\n\r\n  const { username, team, isActive, points } = profile\r\n\r\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Flex alignItems=\"center\">\r\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\r\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\r\n                </Flex>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={getBscScanAddressUrl(account)} color=\"text\" external>\r\n                    {account}\r\n                    <OpenNewIcon ml=\"4px\" />\r\n                  </AddressLink>\r\n                </Flex>\r\n                <ResponsiveText bold>{team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {t('Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {t('Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/layout/Page'\r\nimport PageLoader from 'components/PageLoader'\r\nimport { useFetchAchievements, useProfile } from 'state/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { BASE_BSC_SCAN_URL } from 'config'\r\n\r\nexport const getBscScanAddressUrl = (address: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\r\n}\r\n\r\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\r\n}\r\n\r\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\r\n}\r\n\r\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const walletBalance = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(walletBalance))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, lastUpdated, setBalance])\r\n\r\n  return { balance, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst StyledApproveConfirmButtons = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledApproveConfirmButtons>\r\n      <Box>\r\n        <Button\r\n          disabled={isApproveDisabled}\r\n          onClick={onApprove}\r\n          endIcon={isApproving ? spinnerIcon : undefined}\r\n          isLoading={isApproving}\r\n        >\r\n          {isApproving ? t('Approving') : t('Approve')}\r\n        </Button>\r\n      </Box>\r\n      <Flex justifyContent=\"center\">\r\n        <ChevronRight />\r\n        <ChevronBottom />\r\n      </Flex>\r\n      <Box>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={isConfirmDisabled}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? spinnerIcon : undefined}\r\n        >\r\n          {isConfirming ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </Box>\r\n    </StyledApproveConfirmButtons>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError(t('An error occurred approving transaction'))\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError(t('An error occurred confirming transaction'))\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n"],"sourceRoot":""}