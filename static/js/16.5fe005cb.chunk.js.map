{"version":3,"sources":["views/Home/components/top100.svg","views/Home/components/Top100.tsx","views/Top100/Top100.tsx"],"names":["config","Top100","t","useTranslation","useToast","toastError","toastSuccess","useState","count","setCount","top100api","setTop","bnbprice","setBnb","account","useWeb3React","web3","useWeb3","useEffect","options","method","headers","process","fetch","then","res","json","dataapi","market_cap_usd","binprice","binancecoin","usd","style","backgroundColor","borderRadius","className","scale","mb","textAlign","padding","justifyContent","color","lineHeight","toFixed","toLocaleString","replace","alt","src","top100img","width","fontSize","display","flexFlow","background","height","marginLeft","marginTop","zIndex","onChange","evt","Number","target","value","position","placeholder","type","min","inputMode","pattern","margin","variant","size","disabled","onClick","console","log","Abi","eth","Contract","methods","buyTokens","send","from","utils","toWei","toString","gas","on","data","error","onKeyDown","cursor","id","gridTemplateColumns","gridGap","paddingLeft","Top1","dataCoin","setDataCoin","marketcaptotal","setMarketCap","a","fetchTop100","Page","paddingBottom","fontWeight","map","coin","indexOf","image","name","symbol","toUpperCase","current_price","market_cap","Math","floor"],"mappings":"iRAAe,MAA0B,mC,OCWnCA,EACsB,6CA+KbC,EA3KA,WACb,IAAQC,EAAMC,cAAND,EACR,EAAqCE,cAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aACpB,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA2BJ,mBAAS,GAApC,mBAAOK,EAAP,KAAiBC,EAAjB,KACQC,EAAYC,cAAZD,QACFE,EAAOC,cA0Bb,OAxBAC,qBAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,kBAAmB,8BACnB,iBAAiB,GAAjB,OAAqBC,wDAMvBC,MAAM,6CAA8CJ,GACnDK,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAO,OAAEhB,EAAOgB,EAAQC,mBAE9BL,MAAM,mFACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAK,GAAQ,OAAEhB,EAAOgB,EAASC,YAAYC,UAK9C,IAGA,qCACA,sBAAKC,MAAO,CAAEC,gBAAiB,sBAAuBC,aAAc,QAAUC,UAAU,eAAxF,UACE,cAAC,IAAD,CAASC,MAAM,KAAKC,GAAG,OAAOL,MAAO,CAAEM,UAAW,SAAUL,gBAAiB,UAAWC,aAAc,oBAAqBK,QAAS,OAAQC,eAAgB,iBAA5J,SACE,qBAAKR,MAAO,CAAES,MAAO,SAArB,SACE,mBAAGN,UAAU,YAAYH,MAAO,CAACU,WAAY,KAA7C,4BAGJ,sBAAKV,MAAO,CAACO,QAAS,OAAQC,eAAgB,gBAA9C,UACE,sBAAKL,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAWH,MAAO,CAACS,MAAM,SAAxC,wBAA6D,wBAAQ/B,EAAU,MAAeiC,QAAQ,GAAGC,iBAAiBC,QAAQ,IAAI,UAAtI,WACA,qBAAKV,UAAU,YAAYW,IAAI,eAAeC,IAAKC,EAAWhB,MAAO,CAACiB,MAAM,cAE5E,sBAAKd,UAAU,aAAf,UACE,8BAAK,mBAAGH,MAAO,CAACS,MAAO,QAAQS,SAAU,QAApC,0BAAiE,uBACtE,sBAAKlB,MAAO,CAACE,aAAc,OAAOiB,QAAQ,OAAOC,SAAS,aAAaC,WAAW,gBAAgBC,OAAO,SAAzG,UACA,qBAAKtB,MAAO,CAACS,MAAO,QAASc,WAAY,OAAQL,SAAU,OAAQM,UAAW,OAASC,OAAQ,GAA/F,kBACA,uBAAOC,SAAU,SAAAC,GAASlD,EAASmD,OAAOD,EAAIE,OAAOC,SAAW9B,MAAO,CAAEE,aAAc,OAAO6B,SAAS,WAAWT,OAAO,OAAQJ,SAAU,OAAQK,WAAY,QAASN,MAAO,OAAOI,WAAW,gBAAgBZ,MAAM,kBAAkBe,UAAU,QAASQ,YAAY,IAAIC,KAAK,SAASC,IAAI,IAAIC,UAAU,UAAUC,QAAQ,WAC9T,qBAAKjC,UAAU,YAAYW,IAAI,eAAeC,IAAI,mDAAmDf,MAAO,CAACiB,MAAM,OAAOO,UAAU,UACpI,qBAAKxB,MAAO,CAACS,MAAM,oBAAoBS,SAAS,OAAOmB,OAAO,oBAA9D,iBACA,uBAAM,0BAEN,uBACA,cAAC,IAAD,CACYC,QAAQ,WACRtC,MAAO,CAAEE,aAAc,MAAMiB,QAAQ,QAAQkB,OAAO,OAAOhB,WAAW,eACtEkB,KAAK,KAHjB,SAKY,cAAC,IAAD,CAAe9B,MAAM,OAAOQ,MAAM,WAEpC,uBACV,8BAAK,mBAAGjB,MAAO,CAACS,MAAO,QAAQS,SAAU,QAApC,6BAAoE,uBACzE,sBAAKlB,MAAO,CAACE,aAAc,OAAOiB,QAAQ,OAAOC,SAAS,aAAaC,WAAW,gBAAgBC,OAAO,SAAzG,UACA,qBAAKtB,MAAO,CAACS,MAAO,QAASc,WAAY,OAAQL,SAAU,OAAQM,UAAW,OAASC,OAAQ,GAA/F,gBACA,uBAAOC,SAAU,SAAAC,GAASlD,EAASmD,OAAOD,EAAIE,OAAOC,SAAW9B,MAAO,CAAEE,aAAc,OAAO6B,SAAS,WAAWT,OAAO,OAAQJ,SAAU,OAAQK,WAAY,QAASN,MAAO,OAAOI,WAAW,gBAAgBZ,MAAM,kBAAkBe,UAAU,QAASQ,YAAY,IAAIC,KAAK,SAASO,UAAQ,EAACV,MAAQtD,EAAOI,IAClT,qBAAKuB,UAAU,YAAYW,IAAI,eAAeC,IAAKC,EAAWhB,MAAO,CAACiB,MAAM,OAAOO,UAAU,UAC7F,qBAAKxB,MAAO,CAACS,MAAM,oBAAoBS,SAAS,OAAOmB,OAAO,oBAA9D,oBACA,uBAAM,0BAxBR,aAyBkB,uBAAM,uBACtB,qBAAKI,QAAS,WACV3D,GAAWN,EAAQ,GACrBkE,QAAQC,IAAI,OAAQC,EAAkB5E,GAClB,IAAIgB,EAAK6D,IAAIC,SAC/BF,EACA5E,GAGU+E,QACTC,UAAUlE,GACVmE,KAAK,CACJC,KAAMpE,EACNgD,MAAO9C,EAAKmE,MAAMC,MAAO5E,EAAO6E,WAAY,SAC5CC,IAAK,WAENC,GAAG,WAAW,SAAUC,EAAMC,GAC7Bf,QAAQC,IAAIa,MAEhBlF,EAAaJ,EAAE,mCAAoCA,EAAE,sFAGrDG,EACEH,EAAE,sBACFA,EAAE,0FAGLwF,UAAW,kBAAMhB,QAAQC,IAAI,oBAAqBnE,IAAQ2B,UAAU,eAAeH,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,OAAQO,MAAO,yBAA0BkD,OAAQ,UAAWzC,SAAU,OAAQZ,UAAW,SAAU+B,OAAQ,qBAAsB9B,QAAS,QA1BjR,iCA+BN,sBAAKP,MAAO,CAAEC,gBAAiB,sBAAuBC,aAAc,QAAUC,UAAU,aAAxF,UACE,cAAC,IAAD,CAASC,MAAM,KAAKC,GAAG,OAAOL,MAAO,CAAEM,UAAW,SAAUL,gBAAiB,UAAWC,aAAc,oBAAqBK,QAAS,OAAQC,eAAgB,iBAA5J,SACE,qBAAKR,MAAO,CAAES,MAAO,SAArB,SACE,mBAAGN,UAAU,YAAYH,MAAO,CAACU,WAAY,KAA7C,4BAGJ,sBAAKV,MAAO,CAACO,QAAS,YAAaC,eAAgB,gBAAnD,UACE,sBAAKL,UAAU,eAAf,UACA,qBAAKA,UAAU,YAAYW,IAAI,eAAeC,IAAKC,EAAWhB,MAAO,CAACiB,MAAM,WAC5E,sBAAKd,UAAU,WAAWH,MAAO,CAACS,MAAM,SAAxC,UAAkD,sBAAMmD,GAAG,eAAT,wBAAlD,IAA4F,wBAAQlF,EAAU,MAAeiC,QAAQ,GAAGC,iBAAiBC,QAAQ,IAAI,UAArK,WACA,qBAAK4B,QAAS,WACR3D,GAAWN,EAAQ,GACrBkE,QAAQC,IAAI,OAAQC,EAAkB5E,GAClB,IAAIgB,EAAK6D,IAAIC,SAC/BF,EACA5E,GAGU+E,QACTC,UAAUlE,GACVmE,KAAK,CACJC,KAAMpE,EACNgD,MAAO9C,EAAKmE,MAAMC,MAAO5E,EAAO6E,WAAY,SAC5CC,IAAK,WAENC,GAAG,WAAW,SAAUC,EAAMC,GAC7Bf,QAAQC,IAAIa,MAEhBlF,EAAaJ,EAAE,mCAAoCA,EAAE,sFAGrDG,EACEH,EAAE,sBACFA,EAAE,0FAGLwF,UAAW,kBAAMhB,QAAQC,IAAI,oBAAqBnE,IAAQ2B,UAAU,eAAeH,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,OAAQO,MAAO,yBAA0BkD,OAAQ,UAAWzC,SAAU,OAAQZ,UAAW,SAAU+B,OAAQ,qBAAsB9B,QAAS,OAAOe,OAAO,MAAML,MAAM,QA1B7S,2BA4BA,sBAAKjB,MAAO,CAACmB,QAAQ,OAAO0C,oBAAoB,UAAWC,QAAQ,MAAM7C,MAAM,QAA/E,UACA,sBAAKd,UAAU,aAAf,UACE,8BAAK,mBAAGH,MAAO,CAACS,MAAO,QAAQS,SAAU,OAAO6C,YAAY,OAAvD,0BAAmF,uBACxF,sBAAK/D,MAAO,CAACE,aAAc,OAAOiB,QAAQ,OAAOC,SAAS,aAAaC,WAAW,gBAAgBC,OAAO,SAAzG,UACA,qBAAKtB,MAAO,CAACS,MAAO,QAASc,WAAY,OAAQL,SAAU,OAAQM,UAAW,OAASC,OAAQ,GAA/F,kBACA,uBAAOC,SAAU,SAAAC,GAASlD,EAASmD,OAAOD,EAAIE,OAAOC,SAAW9B,MAAO,CAAEE,aAAc,OAAO6B,SAAS,WAAWT,OAAO,OAAQJ,SAAU,OAAQK,WAAY,QAASN,MAAO,OAAOI,WAAW,gBAAgBZ,MAAM,kBAAkBe,UAAU,QAASQ,YAAY,IAAIC,KAAK,SAASC,IAAI,IAAIC,UAAU,UAAUC,QAAQ,WAC9T,qBAAKjC,UAAU,YAAYW,IAAI,eAAeC,IAAI,mDAAmDf,MAAO,CAACiB,MAAM,OAAOO,UAAU,UACpI,qBAAKxB,MAAO,CAACS,MAAM,oBAAoBS,SAAS,OAAOmB,OAAO,oBAA9D,iBACA,uBAAM,0BAEN,uBAAM,0BAEN,sBAAKlC,UAAU,aAAf,UACA,8BAAK,mBAAGH,MAAO,CAACS,MAAO,QAAQS,SAAU,OAAO6C,YAAY,OAAvD,6BAAsF,uBAC3F,sBAAK/D,MAAO,CAACE,aAAc,OAAOiB,QAAQ,OAAOC,SAAS,aAAaC,WAAW,gBAAgBC,OAAO,SAAzG,UACA,qBAAKtB,MAAO,CAACS,MAAO,QAASc,WAAY,OAAQL,SAAU,OAAQM,UAAW,OAASC,OAAQ,GAA/F,gBACA,uBAAOC,SAAU,SAAAC,GAASlD,EAASmD,OAAOD,EAAIE,OAAOC,SAAW9B,MAAO,CAAEE,aAAc,OAAO6B,SAAS,WAAWT,OAAO,OAAQJ,SAAU,OAAQK,WAAY,QAASN,MAAO,OAAOI,WAAW,gBAAgBZ,MAAM,kBAAkBe,UAAU,QAASQ,YAAY,IAAIC,KAAK,SAASO,UAAQ,EAACV,MAAQtD,EAAOI,IAClT,qBAAKuB,UAAU,YAAYW,IAAI,eAAeC,IAAKC,EAAWhB,MAAO,CAACiB,MAAM,OAAOO,UAAU,UAC7F,qBAAKxB,MAAO,CAACS,MAAM,oBAAoBS,SAAS,OAAOmB,OAAO,oBAA9D,oBACA,uBAAM,0BAEN,uBAAM,uCCnHD2B,EA1DQ,WACrB,MAA+BzF,mBAAS,IAAxC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACA,EAAsC3F,mBAAS,GAA/C,mBAAO4F,EAAP,KAAsBC,EAAtB,KAyBA,OAvBAlF,qBAAU,YAEO,uCAAG,4BAAAmF,EAAA,6DACZlF,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,kBAAmB,8BACnB,iBAAiB,GAAjB,OAAqBC,wDALP,SASZC,MAAM,4HACXC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAgE,GAAOU,EAAYV,MAXP,uBAaZjE,MAAM,6CAA8CJ,GACzDK,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAUyE,EAAazE,EAAQC,mBAfnB,2CAAH,qDAkBnB0E,KAEE,IAEE,eAACC,EAAA,EAAD,CAAMpE,UAAU,UAAUH,MAAO,CAACwE,cAAc,MAAhD,UACI,qBAAKrE,UAAU,UAAf,SACE,cAAC,EAAD,MAEA,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,UAAUH,MAAO,CAAC+D,YAAY,MAAMtD,MAAM,QAAQS,SAAS,QAAzE,yBACA,oBAAIf,UAAU,gBAAgBH,MAAO,CAACS,MAAM,QAAQgE,WAAW,WAA/D,2BACA,oBAAItE,UAAU,sBAAsBH,MAAO,CAACS,MAAM,QAAQgE,WAAW,UAAUnE,UAAU,UAAzF,2BAED2D,EAASS,KAAI,SAACC,GAAD,OACZ,sBAAKxE,UAAU,sBAAf,UACF,sBAAKA,UAAU,aAAf,UACE,+BAAO8D,EAASW,QAAQD,GAAQ,IAChC,qBAAKxE,UAAU,WAAWY,IAAK4D,EAAKE,MAAO/D,IAAK6D,EAAKG,OACrD,uBAAM3E,UAAU,gBAAgBH,MAAO,CAACuB,WAAW,OAAOd,MAAM,qBAAhE,UACGkE,EAAKI,OAAOC,cACb,uBACF,uBAAMpB,GAAG,QAAT,cAAmBe,EAAKM,cAAcrE,iBAAiBC,QAAQ,IAAI,mBAGnE,qBAAIV,UAAU,OAAd,WAAuBwE,EAAKO,WAAWf,EAAe,KAAKxD,QAAQ,GAAnE,QACA,qBAAIR,UAAU,aAAd,UAA4BgF,KAAKC,MAAMT,EAAKO,WAAW,KAAStE,iBAAiBC,QAAQ,IAAI,UAA7F,UAX0C8D,EAAKf,e","file":"static/js/16.5fe005cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/top100.3b767177.svg\";","/* eslint-disable */\r\nimport { useState, useEffect } from 'react'\r\nimport { Heading, ArrowDownIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AbiItem } from 'web3-utils'\r\nimport useToast from 'hooks/useToast'\r\nimport Abi from './abi.json'\r\nimport top100img from './top100.svg'\r\n\r\nconst config = {\r\n  buyContractAddressTop100: \"0x7475E30e90ff55d627cAdfcb4e869d7d203B1b98\"\r\n}\r\n\r\n\r\nconst Top100 = () => {\r\n  const { t } = useTranslation()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const [count, setCount] = useState(0);\r\n  const [top100api, setTop] = useState(0);\r\n  const [bnbprice, setBnb] = useState(0);\r\n  const { account } = useWeb3React();\r\n  const web3 = useWeb3();\r\n\r\n  useEffect(()=>{\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-RapidAPI-Host': 'coinpaprika1.p.rapidapi.com',\r\n        'X-RapidAPI-Key': `${process.env.REACT_APP_API_MARKETCAP}`\r\n      }\r\n    };\r\n\r\n  \r\n    function fetchData(){\r\n      fetch('https://coinpaprika1.p.rapidapi.com/global', options)          \r\n      .then(res=>res.json())\r\n      .then(dataapi=>setTop(dataapi.market_cap_usd))\r\n\r\n      fetch('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd')          \r\n      .then(res=>res.json())\r\n      .then(binprice=>setBnb(binprice.binancecoin.usd))\r\n    }\r\n\r\nfetchData()\r\n\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    <div style={{ backgroundColor: 'rgba(49,39,131,0.9)', borderRadius: '24px' }} className='mobileTop100'>\r\n      <Heading scale=\"xl\" mb=\"24px\" style={{ textAlign: 'center', backgroundColor: '#030e33', borderRadius: '24px 24px 0px 0px', padding: '24px', justifyContent: 'space-between' }}>\r\n        <div style={{ color: 'white' }}>\r\n          <b className='homeSmall' style={{lineHeight: '2'}}>Buy Top100</b>\r\n        </div>\r\n      </Heading>\r\n      <div style={{padding: '24px', justifyContent: \"space-around\"}}>\r\n        <div className='top100module'>\r\n        <div className='buytitle' style={{color:'white'}}>Buy Price: <br />{(top100api/1000000000000).toFixed(3).toLocaleString().replace(',','’')} USD </div>\r\n        <img className='top100img' alt=\"top100 token\" src={top100img} style={{width:'150px'}} />\r\n        </div>\r\n        <div className='top100page'>\r\n          <div><b style={{color: 'white',fontSize: '16pt'}}>BNB amount</b></div><br />\r\n          <div style={{borderRadius: '24px',display:'flex',flexFlow:'row nowrap',background:'rgb(28 25 81)',height:'100px'}}>\r\n          <div style={{color: \"white\", marginLeft: \"24px\", fontSize: \"14px\", marginTop: \"20px\" , zIndex: 9}}>From</div>\r\n          <input onChange={evt => { setCount(Number(evt.target.value)) }} style={{ borderRadius: '24px',position:'relative',height:\"30px\", fontSize: '18px', marginLeft: '-30px', width: '100%',background:'rgb(28 25 81)',color:'rgb(239 186 47)',marginTop:'50px'}} placeholder=\"0\" type=\"number\" min=\"0\" inputMode=\"numeric\" pattern=\"[0-9]*\" />\r\n          <img className='top100img' alt=\"top100 token\" src='./images/gigapoolIcons/binance-coin-bnb-logo.svg' style={{width:'35px',marginTop:'30px'}} />\r\n          <div style={{color:'rgb(243, 186, 47)',fontSize:'16px',margin:'60px 24px 0 10px'}}>BNB</div>\r\n          <br /><br />\r\n          </div>\r\n          <br />\r\n          <IconButton\r\n                      variant=\"tertiary\"\r\n                      style={{ borderRadius: '50%',display:'block',margin:'auto',background:\"transparent\" }}\r\n                      size=\"sm\"\r\n                    >\r\n                      <ArrowDownIcon color=\"gray\" width=\"24px\" />\r\n                    </IconButton>\r\n                    <br />\r\n          <div><b style={{color: 'white',fontSize: '16pt'}}>Top100 amount</b></div><br />\r\n          <div style={{borderRadius: '24px',display:'flex',flexFlow:'row nowrap',background:'rgb(28 25 81)',height:'100px'}}>\r\n          <div style={{color: \"white\", marginLeft: \"24px\", fontSize: \"14px\", marginTop: \"20px\" , zIndex: 9}}>To</div>\r\n          <input onChange={evt => { setCount(Number(evt.target.value)) }} style={{ borderRadius: '24px',position:'relative',height:\"30px\", fontSize: '18px', marginLeft: '-15px', width: '100%',background:'rgb(28 25 81)',color:'rgb(239 186 47)',marginTop:'50px'}} placeholder=\"0\" type=\"number\" disabled value={(count /bnbprice)} />\r\n          <img className='top100img' alt=\"top100 token\" src={top100img} style={{width:'35px',marginTop:'40px'}} />\r\n          <div style={{color:'rgb(243, 186, 47)',fontSize:'16px',margin:'60px 24px 0 10px'}}>TOP100</div>\r\n          <br /><br />\r\n          </div>          <br /><br />\r\n          <div onClick={() => {\r\n          if (account && count > 0) {\r\n            console.log(\"conf\", Abi as AbiItem[], config.buyContractAddressTop100);\r\n            const buyContract = new web3.eth.Contract(\r\n              Abi as AbiItem[],\r\n              config.buyContractAddressTop100\r\n            );\r\n\r\n            buyContract.methods\r\n              .buyTokens(account)\r\n              .send({\r\n                from: account,\r\n                value: web3.utils.toWei((count).toString(), \"ether\"),\r\n                gas: \"220000\",\r\n              })\r\n              .on(\"receipt\", function (data, error) {\r\n                console.log(data);\r\n              });\r\n            toastSuccess(t('Purchase confirmation in wallet'), t('Purchased tokens will arrive to you after you confirm transaction in your wallet'))\r\n          }\r\n          else {\r\n            toastError(\r\n              t('Could not be bough'),\r\n              t('Either connect your wallet first or make sure you buy more than 0,0000000001 tokens.'),\r\n            )\r\n          }\r\n        }} onKeyDown={() => console.log('amount of tokens:', count)} className='homeSmallBig' style={{ backgroundColor: '#FFCC33', borderRadius: '24px', color: 'rgba(49, 39, 131, 0.9)', cursor: 'pointer', fontSize: '16px', textAlign: 'center', margin: '20px 2px 20px auto', padding: '12px'}}>BUY TOP100</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style={{ backgroundColor: 'rgba(49,39,131,0.9)', borderRadius: '24px' }} className='deskTop100'>\r\n      <Heading scale=\"xl\" mb=\"24px\" style={{ textAlign: 'center', backgroundColor: '#030e33', borderRadius: '24px 24px 0px 0px', padding: '24px', justifyContent: 'space-between' }}>\r\n        <div style={{ color: 'white' }}>\r\n          <b className='homeSmall' style={{lineHeight: '2'}}>Buy Top100</b>\r\n        </div>\r\n      </Heading>\r\n      <div style={{padding: '10px 24px', justifyContent: \"space-around\"}}>\r\n        <div className='top100module'>\r\n        <img className='top100img' alt=\"top100 token\" src={top100img} style={{width:'200px'}} />\r\n        <div className='buytitle' style={{color:'white'}}><span id='buypricelite'>Buy Price:</span> <br />{(top100api/1000000000000).toFixed(3).toLocaleString().replace(',','’')} USD </div>\r\n        <div onClick={() => {\r\n          if (account && count > 0) {\r\n            console.log(\"conf\", Abi as AbiItem[], config.buyContractAddressTop100);\r\n            const buyContract = new web3.eth.Contract(\r\n              Abi as AbiItem[],\r\n              config.buyContractAddressTop100\r\n            );\r\n\r\n            buyContract.methods\r\n              .buyTokens(account)\r\n              .send({\r\n                from: account,\r\n                value: web3.utils.toWei((count).toString(), \"ether\"),\r\n                gas: \"220000\",\r\n              })\r\n              .on(\"receipt\", function (data, error) {\r\n                console.log(data);\r\n              });\r\n            toastSuccess(t('Purchase confirmation in wallet'), t('Purchased tokens will arrive to you after you confirm transaction in your wallet'))\r\n          }\r\n          else {\r\n            toastError(\r\n              t('Could not be bough'),\r\n              t('Either connect your wallet first or make sure you buy more than 0,0000000001 tokens.'),\r\n            )\r\n          }\r\n        }} onKeyDown={() => console.log('amount of tokens:', count)} className='homeSmallBig' style={{ backgroundColor: '#FFCC33', borderRadius: '24px', color: 'rgba(49, 39, 131, 0.9)', cursor: 'pointer', fontSize: '20px', textAlign: 'center', margin: '20px 2px 20px auto', padding: '19px',height:'35%',width:'120%'}}>BUY TOP100</div>\r\n        </div>\r\n        <div style={{display:'grid',gridTemplateColumns:'45% 45%', gridGap:'10%',width:'100%'}}>\r\n        <div className='top100page'>\r\n          <div><b style={{color: 'white',fontSize: '16pt',paddingLeft:'7px'}}>BNB amount</b></div><br />\r\n          <div style={{borderRadius: '24px',display:'flex',flexFlow:'row nowrap',background:'rgb(28 25 81)',height:'100px'}}>\r\n          <div style={{color: \"white\", marginLeft: \"24px\", fontSize: \"14px\", marginTop: \"20px\" , zIndex: 9}}>From</div>\r\n          <input onChange={evt => { setCount(Number(evt.target.value)) }} style={{ borderRadius: '24px',position:'relative',height:\"30px\", fontSize: '18px', marginLeft: '-30px', width: '100%',background:'rgb(28 25 81)',color:'rgb(239 186 47)',marginTop:'50px'}} placeholder=\"0\" type=\"number\" min=\"0\" inputMode=\"numeric\" pattern=\"[0-9]*\" />\r\n          <img className='top100img' alt=\"top100 token\" src='./images/gigapoolIcons/binance-coin-bnb-logo.svg' style={{width:'35px',marginTop:'30px'}} />\r\n          <div style={{color:'rgb(243, 186, 47)',fontSize:'16px',margin:'60px 24px 0 10px'}}>BNB</div>\r\n          <br /><br />\r\n          </div>\r\n          <br /><br />\r\n          </div>\r\n          <div className='top100page'>\r\n          <div><b style={{color: 'white',fontSize: '16pt',paddingLeft:'7px'}}>Top100 amount</b></div><br />\r\n          <div style={{borderRadius: '24px',display:'flex',flexFlow:'row nowrap',background:'rgb(28 25 81)',height:'100px'}}>\r\n          <div style={{color: \"white\", marginLeft: \"24px\", fontSize: \"14px\", marginTop: \"20px\" , zIndex: 9}}>To</div>\r\n          <input onChange={evt => { setCount(Number(evt.target.value)) }} style={{ borderRadius: '24px',position:'relative',height:\"30px\", fontSize: '18px', marginLeft: '-15px', width: '100%',background:'rgb(28 25 81)',color:'rgb(239 186 47)',marginTop:'50px'}} placeholder=\"0\" type=\"number\" disabled value={(count /bnbprice)} />\r\n          <img className='top100img' alt=\"top100 token\" src={top100img} style={{width:'35px',marginTop:'40px'}} />\r\n          <div style={{color:'rgb(243, 186, 47)',fontSize:'16px',margin:'60px 24px 0 10px'}}>TOP100</div>\r\n          <br /><br />\r\n          </div>\r\n          <br /><br />\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Top100\r\n","import React,{ useEffect, useState } from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Top100 from 'views/Home/components/Top100'\r\n\r\n\r\nconst Top1: React.FC = () => {\r\n  const [dataCoin,setDataCoin] = useState([]);\r\n  const [marketcaptotal,setMarketCap] = useState(0);\r\n  \r\n  useEffect(()=>{\r\n\r\n  const fetchTop100 = async ()=>{\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-RapidAPI-Host': 'coinpaprika1.p.rapidapi.com',\r\n        'X-RapidAPI-Key': `${process.env.REACT_APP_API_MARKETCAP}`\r\n      }\r\n    };\r\n\r\n    await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')          \r\n    .then(res=>res.json())\r\n    .then(data=>{setDataCoin(data);})\r\n\r\n    await fetch('https://coinpaprika1.p.rapidapi.com/global', options)          \r\n    .then(res=>res.json())\r\n    .then(dataapi=>{setMarketCap(dataapi.market_cap_usd);})\r\n}\r\n\r\nfetchTop100();\r\n\r\n},[])\r\n  return (\r\n    <Page className='TopPage' style={{paddingBottom:'8%'}}>\r\n        <div className='Topgrid'>\r\n          <Top100 />\r\n          </div>\r\n          <div className='table'>\r\n            <div className='tableChild'>\r\n              <h1 className='tableH1' style={{paddingLeft:'10%',color:'white',fontSize:'30pt'}}>TOP100 LIST</h1>\r\n              <h6 className='tableH6Header' style={{color:'white',fontWeight:'lighter'}}>Market cap % </h6>\r\n              <h6 className='tableH6Header qunat' style={{color:'white',fontWeight:'lighter',textAlign:'center'}}>Market Cap</h6>\r\n              </div>\r\n            {dataCoin.map((coin)=>(\r\n              <div className='coinTop100Container' key={coin.id}>\r\n            <div className='coinTop100'>\r\n              <span>{dataCoin.indexOf(coin) + 1}</span>\r\n              <img className='tableImg' src={coin.image} alt={coin.name} />\r\n              <span className='coinNameTable' style={{marginLeft:'10px',color:'rgb(218, 165, 32)'}}>\r\n                {coin.symbol.toUpperCase()}\r\n                <br />\r\n              <span id='price'>${coin.current_price.toLocaleString().replace(',','’')}</span>\r\n              </span>\r\n              </div>\r\n              <h6 className='info'>{(coin.market_cap/marketcaptotal*100).toFixed(2)} %</h6>\r\n              <h6 className='infoCenter'>{Math.floor(coin.market_cap/1000000).toLocaleString().replace(',','’')} M</h6>\r\n            </div>\r\n            ))} \r\n          </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Top1\r\n"],"sourceRoot":""}